<?xml version="1.0" ?>

<project name="CompactHeader" default="dist">
  <property name="src.dir" value="." />
  <property name="CHT.dir" value="../../customizeHeaderToolbar/src" />
  <property name="dist.dir" value="../downloads/"/>
  <property name="AMOdist.dir" value="../AMO/"/>
  <property name="www.dir" value="../www/"/>
  <property name="pref.file" value="${src.dir}/chrome/CompactHeader/content/preferences.js"/>
  <property name="mccoy.cmd" value='c:/Program Files (x86)/mccoy/mccoy.exe'/>

  <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"/>
    
  <xmltask source="./install.rdf">
    <copy path="//em:version/text()" property="app.version"/>   
    <copy path="//em:name/text()" property="app.name"/>   
    <copy path="//em:id/text()" property="app.id"/>   
  </xmltask>

  <target name="dist" depends="spreadVersion,copyCHT,buildAMO,buildMozdev">
      
  </target>

  <target name="copyCHT">
    <copy todir="${src.dir}/chrome">
      <fileset dir="${CHT.dir}/chrome"/>
    </copy>
  </target>
  
  <target name="clean">
    <delete file="${dist.dir}/${app.name}-${app.version}.xpi" />
  </target>
    
    
  <target name="buildAMO">
    <!--
    <replaceregexp file="${pref.file}" 
                   byline="true"
                   match="(.*)return.*( /\* Patch this line for AMO version \*/)"
                   replace="\1return true; /* AMO version */\2"/> -->
    <copy file="${src.dir}/install.rdf" tofile="${AMOdist.dir}/install.rdf"/>
    <replaceregexp file="${AMOdist.dir}/install.rdf" 
                   byline="true"
                   match=".*update.*"
                   replace=""/>                   
    <zip destfile="${AMOdist.dir}/${app.name}-${app.version}.xpi">
      <fileset dir="${src.dir}">
        <include name="chrome.manifest" />
        <include name="defaults/**" />
        <include name="chrome/**" />        
        <exclude name="**/.*" />
        <exclude name="**/CVS/**" />
      </fileset>
      <fileset dir="${AMOdist.dir}">
        <include name="install.rdf" />
      </fileset>
    </zip>
  </target>

  <target name="buildMozdev">
    <!--
    <replaceregexp file="${pref.file}" 
                   byline="true"
                   match="(.*)return .*( /\* Patch this line for AMO version \*/)"
                   replace="\1return false; /* Mozdev version */\2"/>-->
    <zip destfile="${dist.dir}/${app.name}-${app.version}.xpi">
      <fileset dir="${src.dir}">
        <include name="chrome.manifest" />
        <include name="install.rdf" />
        <include name="defaults/**" />
        <include name="chrome/**" />        
        <exclude name="**/.*" />
        <exclude name="**/CVS/**" />
      </fileset>
    </zip>
    <xmltask source="${www.dir}/update.rdf" dest="${www.dir}/update.rdf.new">
      <replace path="/RDF:RDF/RDF:Description/@em:version" withText="${app.version}"/> 
      <replace path="/RDF:RDF/RDF:Description/@em:updateLink" withText="http://downloads.mozdev.org/compactheader/CompactHeader-${app.version}.xpi"/> 
    </xmltask>
    <move file="${www.dir}/update.rdf.new" tofile="${www.dir}/update.rdf"/>
    <property name="absUpdate" location="${www.dir}/update.rdf"/>
    <property name="absXPI" location="${dist.dir}/${app.name}-${app.version}.xpi"/>
    
    <echo message="absUpdate ${absUpdate}"/>
    <echo message="absUpdate ${absXPI}"/>
    
    <exec executable="${mccoy.cmd}">
      <arg value="-command"/>
      <arg value="update"/>
      <arg value="-updateRDF"/>
      <arg value="${absUpdate}"/>
      <arg value="-key"/>
      <arg value="compactheaderkey"/>
      <arg value="-xpi"/>
      <arg value="${absXPI}"/>
    </exec>
  </target>

  <target name="spreadVersion">
  <!--
    <xmltask source="${www.dir}/availableVersion.xml" dest="${www.dir}/availableVersion.xml.new">
      <replace path="/updates/update[1]/version" withXml="&lt;version&gt;${app.version}&lt;/version&gt;"/> 
    </xmltask>
    <move file="${www.dir}/availableVersion.xml.new" tofile="${www.dir}/availableVersion.xml"/>
    -->
    <!--  
    <xmltask source="${www.dir}/availVersion.xml" dest="${www.dir}/availVersion.xml.new">
      <replace path="/updates/update[@server='mozdev']/@version" withText="${app.version}"/> 
    </xmltask>
    <move file="${www.dir}/availVersion.xml.new" tofile="${www.dir}/availVersion.xml"/>
-->
    <replaceregexp file="${www.dir}/installation.html" 
                   byline="true"
                   match="(.*update the version.*CompactHeader-).*(.xpi&quot;>Version ).*( of Co.*)"
                   replace="\1${app.version}\2${app.version}\3"/>                   

  </target>  

</project>
